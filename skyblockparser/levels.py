def get_cata_lvl(exp):
    levels = {
        '1': 50, '2': 125, '3': 235, '4': 395, '5': 625, '6': 955, '7': 1425, '8': 2095, '9': 3045,
        '10': 4385, '11': 6275, '12': 8940, '13': 12700, '14': 17960, '15': 25340, '16': 35640,
        '17': 50040, '18': 70040, '19': 97640, '20': 135640, '21': 188140, '22': 259640, '23': 356640,
        '24': 488640, '25': 668640, '26': 911640, '27': 1239640, '28': 1684640, '29': 2284640,
        '30': 3084640, '31': 4149640, '32': 5559640, '33': 7459640, '34': 9959640, '35': 13259640,
        '36': 17559640, '37': 23159640, '38': 30359640, '39': 39559640, '40': 51559640, '41': 66559640,
        '42': 85559640, '43': 109559640, '44': 139559640, '45': 177559640, '46': 225559640,
        '47': 285559640, '48': 360559640, '49': 453559640, '50': 569809640
    }
    for level in levels:
        if exp >= levels["50"]:
            return 50
        if levels[level] > exp:
            if int(level) == 1:
                level = str(2)
            lowexp = levels[str(int(level) - 1)]
            highexp = levels[level]
            difference = highexp - lowexp
            extra = exp - lowexp
            percentage = (extra / difference)
            return (int(level) - 1) + percentage


SKILL_MAX_LEVELS = {
    "mining": {
        "maxLevel": 60,
    },

    "foraging": {
        "maxLevel": 50,
    },

    "enchanting": {
        "maxLevel": 60,
    },

    "farming": {
        "maxLevel": 60,
    },

    "combat": {
        "maxLevel": 60,
    },

    "fishing": {
        "maxLevel": 50,
    },

    "alchemy": {
        "maxLevel": 50,
    },

    "taming": {
        "maxLevel": 50,
    },

    "social": {
        "maxLevel": 25,
    },

    "runecrafting": {
        "maxLevel": 25,
    },

    "carpentry": {
        "maxLevel": 50,
    }
}


def get_hotm_level(exp):
    levels = {
        "1": 0, "2": 3000, "3": 12000, "4": 37000, "5": 97000, "6": 197000, "7": 347000
    }
    for level in levels:
        if exp >= levels["7"]:
            return 7
        
        if levels[level] > exp:
            level = int(level) - 1
        
        return level


def get_slayer_level(slayer_type, exp):
    revenant = {"0": 0, "1": 5, "2": 15, "3": 200, "4": 1000,
                "5": 5000, "6": 20000, "7": 100000, "8": 400000, "9": 1000000}
    spider = {"0": 0, "1": 5, "2": 15, "3": 200, "4": 1000,
              "5": 5000, "6": 20000, "7": 100000, "8": 400000, "9": 1000000}
    sven = {"0": 0, "1": 10, "2": 30, "3": 250, "4": 1500, "5": 5000,
            "6": 20000, "7": 100000, "8": 400000, "9": 1000000}
    enderman = {"0": 0, "1": 10, "2": 30, "3": 250, "4": 1500,
                "5": 5000, "6": 20000, "7": 100000, "8": 400000, "9": 1000000}
    blaze = {"0": 0, "1": 10, "2": 30, "3": 250, "4": 1500,
             "5": 5000, "6": 20000, "7": 100000, "8": 400000, "9": 1000000}
    vampire = {"0": 0, "1": 20, "2": 75, "3": 240, "4": 840, "5": 2400}

    if slayer_type == "zombie":
        levels = revenant
    elif slayer_type == "spider":
        levels = spider
    elif slayer_type == "wolf":
        levels = sven
    elif slayer_type == "enderman":
        levels = enderman
    elif slayer_type == "blaze":
        levels = blaze
    elif slayer_type == "vampire":
        levels = vampire

    for level in levels:
        try:
            if exp >= levels["9"]:
                return levels["9"]
        except:
            if exp >= levels["5"]:
                return levels["5"]

        if levels.get(level) > exp:
            lowexp = levels[str(int(level) - 1)]
            highexp = levels.get(level)
            difference = highexp - lowexp
            extra = exp - lowexp
            percentage = (extra / difference)
            return (int(level) - 1) + percentage


skill_levels = {
    "0": 0, "1": 50, "2": 175, "3": 375, "4": 675, "5": 1175, "6": 1925, "7": 2925, "8": 4425, "9": 6425,
    "10": 9925, "11": 14925, "12": 22425, "13": 32425, "14": 47425, "15": 67425, "16": 97425, "17": 147425,
    "18": 222425, "19": 322425, "20": 522425, "21": 822425, "22": 1222425, "23": 1722425, "24": 2322425,
    "25": 3022425, "26": 3822425, "27": 4722425, "28": 5722425, "29": 6822425, "30": 8022425, "31": 9322425,
    "32": 10722425, "33": 12222425, "34": 13822425, "35": 15522425, "36": 17322425, "37": 19222425,
    "38": 21222425, "39": 23322425, "40": 25522425, "41": 27822425, "42": 30222425, "43": 32722425,
    "44": 35322425, "45": 38072425, "46": 40972425, "47": 44072425, "48": 47472425, "49": 51172425,
    "50": 55172425, "51": 59472425, "52": 64072425, "53": 68972425, "54": 74172425, "55": 79672425,
    "56": 85472425, "57": 91572425, "58": 97972425, "59": 104672425, "60": 111672425

}


def get_skill_lvl(skill_type, exp):
    levels = {
        "0": 0, "1": 50, "2": 175, "3": 375, "4": 675, "5": 1175, "6": 1925, "7": 2925, "8": 4425, "9": 6425,
        "10": 9925, "11": 14925, "12": 22425, "13": 32425, "14": 47425, "15": 67425, "16": 97425, "17": 147425,
        "18": 222425, "19": 322425, "20": 522425, "21": 822425, "22": 1222425, "23": 1722425, "24": 2322425,
        "25": 3022425, "26": 3822425, "27": 4722425, "28": 5722425, "29": 6822425, "30": 8022425, "31": 9322425,
        "32": 10722425, "33": 12222425, "34": 13822425, "35": 15522425, "36": 17322425, "37": 19222425,
        "38": 21222425, "39": 23322425, "40": 25522425, "41": 27822425, "42": 30222425, "43": 32722425,
        "44": 35322425, "45": 38072425, "46": 40972425, "47": 44072425, "48": 47472425, "49": 51172425,
        "50": 55172425, "51": 59472425, "52": 64072425, "53": 68972425, "54": 74172425, "55": 79672425,
        "56": 85472425, "57": 91572425, "58": 97972425, "59": 104672425, "60": 111672425
    }
    for level in levels:

        if exp >= levels[str(SKILL_MAX_LEVELS[skill_type]["maxLevel"])]:
            return SKILL_MAX_LEVELS[skill_type]["maxLevel"]

        if levels[level] > exp:
            lowexp = levels[str(int(level) - 1)]
            highexp = levels[level]
            difference = highexp - lowexp
            extra = exp - lowexp
            percentage = (extra / difference)
            return (int(level) - 1) + percentage
